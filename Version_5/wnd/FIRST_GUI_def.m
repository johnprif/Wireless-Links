## -*- texinfo -*-
## @deftypefn  {} {} dummy()
##
## This is a dummy function documentation. This file have a lot functions
## and each one have a little documentation. This text is to avoid a warning when
## install this file as part of package.
## @end deftypefn
##
## Set the graphics toolkit and force read this file as script file (not a function file).
##
graphics_toolkit qt;
##


##
##
## Begin callbacks definitions 
##

## @deftypefn  {} {} Height_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Height_Slider control.
##

function About_doIt(src, data, FIRST_GUI)
   figure("name","Priftis Brothers","NumberTitle","off", 'MenuBar', 'figure', 'resize', 'off','windowstyle', 'modal');
   title("Created by Priftis Brothers with love 2021©");
   axis off
   
end

## @end deftypefn
function Height_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Height,'String',sprintf('Height = %.1fm',get(FIRST_GUI.Height_Slider,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Elevation_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Elevation_Slider control.
##
## @end deftypefn
function Elevation_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Elevation,'String',sprintf('Elevation = %.1fdeg',get(FIRST_GUI.Elevation_Slider,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Azimuth_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Azimuth_Slider control.
##
## @end deftypefn
function Azimuth_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Azimuth,'String',sprintf('Azimuth = %.1fdeg',get(FIRST_GUI.Azimuth_Slider,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Horizon_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Horizon_Slider control.
##
## @end deftypefn
function Horizon_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Horizon,'String',sprintf('Horizon = %.1fm',get(FIRST_GUI.Horizon_Slider,"Value")));
% This code will be  executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Distance_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Distance_Slider control.
##
## @end deftypefn
function Distance_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Distance,'String',sprintf('Distance = %.1fm',get(FIRST_GUI.Distance_Slider,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} LOS_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of LOS_Slider control.
##
## @end deftypefn
function LOS_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.LOS,'String',sprintf('LOS\n%.2f%c',get(FIRST_GUI.LOS_Slider,"Value"), '%'));
  set(FIRST_GUI.NLOS,'String',sprintf('NLOS\n%.2f%c',100-get(FIRST_GUI.LOS_Slider,"Value"), '%'));
end

## @deftypefn  {} {} Distance__Slider_2_BD_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Distance__Slider_2_BD control.
##
## @end deftypefn
function Distance__Slider_2_BD_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Distance_label,'String',sprintf('Distance = %.1fm',get(FIRST_GUI.Distance__Slider_2_BD,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Power_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Power_Slider control.
##
## @end deftypefn
function Power_Slider_doIt(src, data, FIRST_GUI)
  powerUnits=strsplit(get(FIRST_GUI.Power_Units,"String"),"|");
  set(FIRST_GUI.Power,'String',sprintf('Power = %.1f %s',get(FIRST_GUI.Power_Slider,"Value"), powerUnits{1,int8(get(FIRST_GUI.Power_Units,"Value"))}));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Power_Units_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Power_Units control.
##
## @end deftypefn
function Power_Units_doIt(src, data, FIRST_GUI)
  powerUnits=strsplit(get(FIRST_GUI.Power_Units,"String"),"|");
  set(FIRST_GUI.Power,'String',sprintf('Power = %.1f %s',get(FIRST_GUI.Power_Slider,"Value"), powerUnits{1,int8(get(FIRST_GUI.Power_Units,"Value"))}));
end

## @deftypefn  {} {} Frequency_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Frequency_Slider control.
##
## @end deftypefn
function Frequency_Slider_doIt(src, data, FIRST_GUI)
  frequencyUnits=strsplit(get(FIRST_GUI.Frequency_Units,"String"),"|");
  set(FIRST_GUI.Frequency,'String',sprintf('Frequency = %.1f %s',get(FIRST_GUI.Frequency_Slider,"Value"), frequencyUnits{1,int8(get(FIRST_GUI.Frequency_Units,"Value"))}));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

## @deftypefn  {} {} Frequency_Units_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Frequency_Units control.
##
## @end deftypefn
function Frequency_Units_doIt(src, data, FIRST_GUI)
  frequencyUnits=strsplit(get(FIRST_GUI.Frequency_Units,"String"),"|");
  set(FIRST_GUI.Frequency,'String',sprintf('Frequency = %.1f %s',get(FIRST_GUI.Frequency_Slider,"Value"), frequencyUnits{1,int8(get(FIRST_GUI.Frequency_Units,"Value"))}));
end

## @deftypefn  {} {} Antenna_Types_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Antenna_Types control.
##
## @end deftypefn
function Antenna_Types_doIt(src, data, FIRST_GUI)

end

## @deftypefn  {} {} PropagationModelChooser_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of PropagationModelChooser control.
##
## @end deftypefn
function PropagationModelChooser_doIt(src, data, FIRST_GUI)

  
end

## @deftypefn  {} {} Medium_Edit_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Medium_Edit control.
##
## @end deftypefn
function Medium_Edit_doIt(src, data, FIRST_GUI)

    figRec=figure("Name","Propagation Model Properties","NumberTitle","off", 'MenuBar', 'figure', 'toolbar', 'figure', 'resize', 'off','windowstyle', 'modal');   
    axis off

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
  %speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  %set(FIRST_GUI.Speed,'String',sprintf('Speed = %.1f %s',get(FIRST_GUI.Speed_Slider,"Value"), speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))}));
  
  
  antenna_types=strsplit(get(FIRST_GUI.PropagationModelChooser,"String"),"|");
  antenna_model= antenna_types{1,int8(get(FIRST_GUI.PropagationModelChooser,"Value"))};

  if(strcmp(antenna_model, "Free Space")==1)
       setPropagationModel(figRec)
  endif
  if(strcmp(antenna_model, "Okumura-Hata Local Area")==1)
       setPropagationModel(figRec)
  endif 
  if(strcmp(antenna_model, "Okumura-Hata Suburban Area")==1)
      setPropagationModel(figRec)
  endif  
  if(strcmp(antenna_model, "Okumura-Hata Urban Area")==1)
     setPropagationModel(figRec)
  endif  
  if(strcmp(antenna_model, "Olane Earth")==1)
     setPropagationModel(figRec)
  endif
end

## @deftypefn  {} {} Speed_Units_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Speed_Units control.
##
## @end deftypefn
function Speed_Units_doIt(src, data, FIRST_GUI)
  speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  set(FIRST_GUI.Speed,'String',sprintf('Speed = %.1f %s',get(FIRST_GUI.Speed_Slider,"Value"), speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))}));
  
 end

function Speed_Slider_doIt(src, data, FIRST_GUI)
  speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  set(FIRST_GUI.Speed,'String',sprintf('Speed = %.1f %s',get(FIRST_GUI.Speed_Slider,"Value"), speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))}));
  
end

## @deftypefn  {} {} Receiver_Antenna_Type_Chooser_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Receiver_Antenna_Type_Chooser control.
##
## @end deftypefn
function Receiver_Antenna_Type_Chooser_doIt(src, data, FIRST_GUI)

end

## @deftypefn  {} {} Receiver_Edit_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Receiver_Edit control.
##
## @end deftypefn

function setPropagationModel(figRec)
   diameter = uicontrol( ...
	'parent',figRec, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [10 400 90 17], ... 
	'String', 'e', ... 
	'TooltipString', '');
   
   Edit_diameter_value = uicontrol( ...
	'parent',figRec, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Bahnschrift Condensed', ... 
	'FontSize', 12, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [100 400 90 17], ... 
	'String', '0', ... 
	'TooltipString', '');

   Rin = uicontrol( ...
	'parent',figRec, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [10 380 90 17], ... 
	'String', 'm', ... 
	'TooltipString', '');
  
  Edit_Rin_value = uicontrol( ...
	'parent',figRec, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Bahnschrift Condensed', ... 
	'FontSize', 12, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [100 380 90 17], ... 
	'String', '0', ... 
	'TooltipString', '');
  
endfunction


function setFigContext(figRec, first, second, secEnable)
   diameter = uicontrol( ...
	'parent',figRec, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [10 400 90 17], ... 
	'String', first, ... 
	'TooltipString', '');
   
   Edit_diameter_value = uicontrol( ...
	'parent',figRec, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Bahnschrift Condensed', ... 
	'FontSize', 12, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [100 400 90 17], ... 
	'String', '0', ... 
	'TooltipString', '');
   
   Rin = uicontrol( ...
	'parent',figRec, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [10 380 90 17], ... 
	'String', second, ... 
	'TooltipString', '', ...
  'visible', secEnable);
  
  Edit_Rin_value = uicontrol( ...
	'parent',figRec, ... 
	'Style','edit', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [1.000 1.000 1.000], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Bahnschrift Condensed', ... 
	'FontSize', 12, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [100 380 90 17], ... 
	'String', '0', ... 
	'TooltipString', '', ...
  'visible', secEnable);
  
endfunction

function Receiver_Edit_doIt(src, data, FIRST_GUI)
  figRec=figure("Name","Receiver Antenna Properties","NumberTitle","off", 'MenuBar', 'figure', 'toolbar', 'figure', 'resize', 'off','windowstyle', 'modal');
  axis off
% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
  %speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  %set(FIRST_GUI.Speed,'String',sprintf('Speed = %.1f %s',get(FIRST_GUI.Speed_Slider,"Value"), speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))}));
  
  
  antenna_types=strsplit(get(FIRST_GUI.Receiver_Antenna_Type_Chooser,"String"),"|");
  antenna_model= antenna_types{1,int8(get(FIRST_GUI.Receiver_Antenna_Type_Chooser,"Value"))};

  if(strcmp(antenna_model, "0.25 Wavelength Dipole")==1 || strcmp(antenna_model, "0.5 Wavelength Dipole")==1 || strcmp(antenna_model, "1.5 Wavelength Dipole")==1 || strcmp(antenna_model, "Wavelength Dipole")==1)
       setFigContext(figRec, 'Rin','', 'off')
  endif
  if(strcmp(antenna_model, "Large Loop")==1 || strcmp(antenna_model, "Small Loop")==1)
       setFigContext(figRec, 'diameter', 'Rin', 'on')
  endif
  
  if(strcmp(antenna_model, "Hertzian Dipole")==1)
      setFigContext(figRec, 'DI', 'Rin', 'on')
  endif
  
  if(strcmp(antenna_model, "Short Dipole")==1)
     setFigContext(figRec, 'length', 'Rin', 'on')
  endif
end

## @deftypefn  {} {} LOS_Rice_Slider_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of LOS_Rice_Slider control.
##
## @end deftypefn
function LOS_Rice_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.LOSRiceFactor,'String',sprintf('LOS Rice factor = %.0f',get(FIRST_GUI.LOS_Rice_Slider,"Value")));
% This code will be executed when user change the value of slider.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallbck' from the properties editor
end

function LOS_View_doIt(src, data, FIRST_GUI)
  
  
  
  K=get(FIRST_GUI.LOS_Rice_Slider,"Value");
  x = linspace(0, 4, 100);
  figure('windowstyle', 'modal');

  ha=subplot(2,1,1);
  hold on;
  grid on;
  colors={'k','r'};
  i=1;
  C=1;
  for k=[0 K]
      
      s=sqrt(C/(k+1));
      v=s*sqrt(2*k);
      y=ricepdf(x, v, s);
      
      plot(x,y,colors{i});
      i=i+1;
  end
  xlabel('Fading Amplitute (V)');
  ylabel('Probability Density');
  set(ha,'YLim',[0 2.5]);
  title(sprintf('Indicative Rice p.d.f for k=0, %0.f with constant signal power',K));
  legend('k=0',sprintf('k=%.0f',K));

  subplot(2,1,2);
  hold on;
  grid on;
  colors={'k','r'};
  i=1;

  
  for k= [0 K]
     [Result, t]=jakes(get(FIRST_GUI.Frequency_Slider,"Value")*10^6,get(FIRST_GUI.Speed_Slider,"Value"),1,k);
     plot(t,20.*log10(abs(Result)),colors{i});
     i=i+1;
  end
  xlabel('Time (s)');
  ylabel('Signal relative to mean (dB)');
  title({'Indicative time series of rice fading', sprintf('for k=0, %d - for constant signal power',K)});
  legend('k=0',sprintf('k=%.0f',K));
end

function Secondary_Paths_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.SecondaryPaths,'String',sprintf('Secondary paths = %.0f',get(FIRST_GUI.Secondary_Paths_Slider,"Value")));
end

## @deftypefn  {} {} RMS_Views_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of RMS_Views control.
##
## @end deftypefn
function speedValue = castToMS(oldValue, speedUnit)
  speedValue=oldValue;
  if(strcmp(speedUnit, "m/s")==1)
    speedValue = oldValue;
  endif
  if(strcmp(speedUnit, "Km/h")==1)
    speedValue = oldValue*1000/3600;   
  endif
end 

function wattValue = castToWatt(oldValue, wattUnit)
  wattValue = oldValue;
  if(strcmp(wattUnit, "dbW")==1)
    wattValue = 10^(oldValue*0.1);
  endif
  if(strcmp(wattUnit, "mW")==1)
    wattValue = oldValue*(10^(-3));
  endif
  if(strcmp(wattUnit, "dbmW")==1)
    wattValue = (10^(oldValue*0.1))/1000;
  endif
end

function RMS_Views_doIt(src, data, FIRST_GUI)
  N=floor(get(FIRST_GUI.Secondary_Paths_Slider,'Value'));
  rms=strsplit(get(FIRST_GUI.RMS_Delay_Chooser,"String"),"|");
  i=rms{1,int8(get(FIRST_GUI.RMS_Delay_Chooser,"Value"))};
  if (strcmp(i, "Indoor Cells")==1)
      a=0.01;
      b=0.05;
      Gains= -(2).*rand(1,N);
  endif  
  if (strcmp(i, "Urban Macrocell")==1)
    a=1;
    b=3;
    Gains= -(15).*rand(1,N);
  endif 
  if(strcmp(i, "Urban Macrocell")==1 )
    a=1;
    b=3;
    Gains= -(15).*rand(1,N);
  endif
  if(strcmp(i, "Suburban Macrocell")==1)
    a=0;
    b=1;
    Gains= -(5).*rand(1,N);
  endif
  if(strcmp(i, "Open Area")==1 )
    a=0;
    b=0.2;
    Gains= -(3).*rand(1,N);
  endif
  if(strcmp(i, "Hilly Area Macrocell")==1)
    a=3;
    b=10;
    Gains= -(25).*rand(1,N);
  endif
  if(strcmp(i, "Mobile Satellite")==1)
    a=0.04;
    b=0.05;   
    Gains= -(5).*rand(1,N);
  endif
Delays= (1e-6)*(a+(b-a).*rand(1,N));

wattUnits=strsplit(get(FIRST_GUI.Power_Units,"String"),"|");
specificWattUnit = wattUnits{1,int8(get(FIRST_GUI.Power_Units,"Value"))};

CC=get(FIRST_GUI.Power_Slider,'Value');
CC = castToWatt(CC, specificWattUnit);
k=get(FIRST_GUI.LOS_Rice_Slider,'Value');
lakis = figure; 
set(lakis, "windowstyle", "modal");

oldSpeedValue = get(FIRST_GUI.Speed_Slider, "Value");
speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
specificSpeedUnit=speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))};
newSpeedValue = castToMS(oldSpeedValue, specificSpeedUnit);

signalFrequency = get(FIRST_GUI.Frequency_Slider, "Value")*(10^6);

h1=subplot(2,1,1);
set(h1,'NextPlot','add');
grid on;
for i=1:N
   C=10^(0.1*(10*log10(CC)+Gains(i))); 
   s=sqrt(C/(k+1));
   [Result, t]=jakes(signalFrequency, newSpeedValue,1,k);
   plot3(ones(1,length(t)).*Delays(i)*(10^9),t,Gains(i)+20.*log10(abs(Result)));
end
ylabel('Time (s)');
zlabel('Signal relative to mean (dB)');
xlabel('Relative Delay (ns)');
title(sprintf('Time-variant impulse response - secondary paths only'));
view([-18 32]);

subplot(2,1,2);
stem(Delays*(10^9), abs(Gains));

ylabel('Signal relative to mean (dB)');
xlabel('Relative Delay (ns)');
title(sprintf('Power-delay profile - secondary paths only'));

  
  
% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
end

## @deftypefn  {} {} RMS_Delay_Chooser_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of RMS_Delay_Chooser control.
##
## @end deftypefn
function RMS_Delay_Chooser_doIt(src, data, FIRST_GUI)

end

function Eb_No_Slider_doIt(src, data, FIRST_GUI)
  set(FIRST_GUI.Eb_No,'String',sprintf('Eb/No = %.0fdb',get(FIRST_GUI.Eb_No_Slider,"Value")));
end

## @deftypefn  {} {} White_Noise_View_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of White_Noise_View control.
##
## @end deftypefn
function White_Noise_View_doIt(src, data, FIRST_GUI)
  fig=figure("Name","WhiteNoise_View","NumberTitle","off", 'MenuBar', 'figure', 'toolbar', 'figure', 'resize', 'on','windowstyle', 'modal');
  title("Created by Priftis Brothers with love 2021©");
  
  wattUnits=strsplit(get(FIRST_GUI.Power_Units,"String"),"|");
  specificWattUnit = wattUnits{1,int8(get(FIRST_GUI.Power_Units,"Value"))};

  CC=get(FIRST_GUI.Power_Slider,'Value');
  CC = castToWatt(CC, specificWattUnit);
  
  oldSpeedValue = get(FIRST_GUI.Speed_Slider, "Value");
  speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  specificSpeedUnit=speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))};
  newSpeedValue = castToMS(oldSpeedValue, specificSpeedUnit);
  
  k=get(FIRST_GUI.LOS_Rice_Slider,'Value');
  
  signalFrequency = get(FIRST_GUI.Frequency_Slider, "Value")*(10^6);
  
  [Result, t]=jakes(signalFrequency,newSpeedValue,1,k);
  
  #pkg load communications
  s1 = subplot( 2, 1, 1 ); 
  Eb_No_Slider_Value = get(FIRST_GUI.Eb_No_Slider, "value");
  Indicative_rice_fading = sprintf('Indicative rice fading for k=5 AWGN with Eb/No=%.2f (QAM-16-3/4)',Eb_No_Slider_Value);
  plot( t, 20.*log10(abs(awgn(Result,Eb_No_Slider_Value))), 'b'); set( s1, 'title', Indicative_rice_fading );
  xlabel("Time (s)");
  ylabel("Signal to relative to mean(dB)");
  
  s3 = subplot( 2, 1, 2 ); 
  EbNo = 8:2:20;
  M = 16; % Use 16 QAM
  L = 1; % Start without diversity
  ber = berfading(EbNo,'qam',M,L);
  semilogy(EbNo,ber);
  text(18.5, 0.02, sprintf('L=%d', L))
  hold on
  % Loop over diversity order, L, 2 to 20
  for L=2:20
    ber = berfading(EbNo,'qam',M,L,get(FIRST_GUI.LOS_Rice_Slider, "Value"));
    semilogy(EbNo,ber);
  end
  text(18.5, 1e-11, sprintf('L=%d', L))
  title(sprintf('QAM-16 over fading channel with rice factor=%d and diversity order L=1..20',Eb_No_Slider_Value));
  xlabel("Eb/N0 (dB)");
  ylabel("BER");
  grid on
end

## @deftypefn  {} {} PathLoss_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of PathLoss control.
##
## @end deftypefn
function PathLoss_doIt(src, data, FIRST_GUI)

end

## @deftypefn  {} {} Recv_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Recv control.
##
## @end deftypefn
function Recv_doIt(src, data, FIRST_GUI)

end

## @deftypefn  {} {} SimStart_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of SimStart control.
##
## @end deftypefn
function SimStart_doIt(src, data, FIRST_GUI)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
end

## @deftypefn  {} {} PauseSim_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of PauseSim control.
##
## @end deftypefn
function PauseSim_doIt(src, data, FIRST_GUI)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
end

## @deftypefn  {} {} StopSim_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of StopSim control.
##
## @end deftypefn
function StopSim_doIt(src, data, FIRST_GUI)

% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
end

## @deftypefn  {} {} Transmiter_Edit_doIt (@var{src}, @var{data}, @var{FIRST_GUI})
##
## Define a callback for default action of Transmiter_Edit control.
##
## @end deftypefn
function Transmiter_Edit_doIt(src, data, FIRST_GUI)
  figRec=figure("Name","Transmitter Antenna Properties","NumberTitle","off", 'MenuBar', 'figure', 'toolbar', 'figure', 'resize', 'off','windowstyle', 'modal');
  axis off
% This code will be executed when user click the button control.
% As default, all events are deactivated, to activate must set the
% propertie 'generateCallback' from the properties editor
  %speedUnits=strsplit(get(FIRST_GUI.Speed_Units,"String"),"|");
  %set(FIRST_GUI.Speed,'String',sprintf('Speed = %.1f %s',get(FIRST_GUI.Speed_Slider,"Value"), speedUnits{1,int8(get(FIRST_GUI.Speed_Units,"Value"))}));
  
  
  antenna_types=strsplit(get(FIRST_GUI.Antenna_Types,"String"),"|");
  antenna_model= antenna_types{1,int8(get(FIRST_GUI.Antenna_Types,"Value"))};

  if(strcmp(antenna_model, "0.25 Wavelength Dipole")==1 || strcmp(antenna_model, "0.5 Wavelength Dipole")==1 || strcmp(antenna_model, "1.5 Wavelength Dipole")==1 || strcmp(antenna_model, "Wavelength Dipole")==1)
       setFigContext(figRec, 'Rin', '', 'off')
  endif
  if(strcmp(antenna_model, "Large Loop")==1 || strcmp(antenna_model, "Small Loop")==1)
       setFigContext(figRec, 'diameter', 'Rin', 'on')
  endif
  
  if(strcmp(antenna_model, "Hertzian Dipole")==1)
      setFigContext(figRec, 'DI', 'Rin', 'on')
  endif
  
  if(strcmp(antenna_model, "Short Dipole")==1)
     setFigContext(figRec, 'length', 'Rin', 'on')
  endif
end

 
## @deftypefn  {} {@var{ret} = } show_FIRST_GUI()
##
## Create windows controls over a figure, link controls with callbacks and return 
## a window struct representation.
##
## @end deftypefn
function ret = show_FIRST_GUI()
  _scrSize = get(0, "screensize");
  _xPos = (_scrSize(3) - 1280)/2;
  _yPos = (_scrSize(4) - 960)/2;
   FIRST_GUI = figure ( ... 
	'Color', [0.941 0.941 0.941], ...
	'Position', [_xPos _yPos 1150 890], ...
	'resize', 'off', ...
	'windowstyle', 'normal', ...
	'MenuBar', 'none', ...
  'Name', 'vLab 2', ...
  'NumberTitle', 'off');
	 set(FIRST_GUI, 'visible', 'off');
  ThreeDViewer = uimenu( ...
  'parent',FIRST_GUI, ...
  'label','&3D Viewer'
  );
  ThreeDViewer_Text = uimenu( ...
  'parent',ThreeDViewer, ...
  'label','&Show', ...
  'callback', ''
  );
  
  Demo = uimenu( ...
  'parent',FIRST_GUI, ...
  'label','&Demo'
  );
  Demo_Text = uimenu( ...
  'parent',Demo, ...
  'label','&Play', ...
  'callback', ''
  );
  About = uimenu( ...
  'parent',FIRST_GUI, ...
  'label','&About', ...
  'callback', ''
  );
  SetGeometryData = uipanel( ...
	'parent',FIRST_GUI, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [6 446 506 435], ... 
	'title', '1. Set Geometry Data', ... 
	'TitlePosition', 'lefttop');
  AntennaPanel = uipanel( ...
	'parent',SetGeometryData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [8 152 491 260], ... 
	'title', 'Antenna', ... 
	'TitlePosition', 'lefttop');
  Height_Slider = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 100, ... 
	'Min', 5, ... 
	'Position', [157 208 305 20], ... 
	'TooltipString', '', ... 
	'Value', 5);
  Height = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 209 144 16], ... 
	'String', 'Height = 5m', ... 
	'TooltipString', '');
  Elevation_Slider = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 60, ... 
	'Min', -60, ... 
	'Position', [158 158 304 21], ... 
	'TooltipString', '', ... 
	'Value', -60);
  Azimuth_Slider = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 180, ... 
	'Min', -180, ... 
	'Position', [156 108 306 22], ... 
	'TooltipString', '', ... 
	'Value', -180);
  Horizon_Slider = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 100, ... 
	'Min', -100, ... 
	'Position', [158 63 304 22], ... 
	'TooltipString', '', ... 
	'Value', -100);
  Distance_Slider = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 200, ... 
	'Min', -2000, ... 
	'Position', [159 21 304 21], ... 
	'TooltipString', '', ... 
	'Value', -2000);
  Azimuth = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 110 145 16], ... 
	'String', 'Azimuth =  -180deg', ... 
	'TooltipString', '');
  Horizon = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 64 144 16], ... 
	'String', 'Horizon = -100m', ... 
	'TooltipString', '');
  Elevation = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [2 158 149 16], ... 
	'String', ' Elevation = -60deg', ... 
	'TooltipString', '');
  Distance = uicontrol( ...
	'parent',AntennaPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 24 145 16], ... 
	'String', 'Distance =  -2000m', ... 
	'TooltipString', '');
  BuildingsPanel = uipanel( ...
	'parent',SetGeometryData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [8 13 491 134], ... 
	'title', 'Buildings', ... 
	'TitlePosition', 'lefttop');
  LOS_Slider = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 0, ... 
	'Min', 100, ... 
	'Position', [126 67 264 22], ... 
	'TooltipString', '', ... 
	'Value', 100);
  LOS = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [55 54 62 55], ... 
	'String', 'LOS', ... 
	'TooltipString', '');
  NLOS = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [402 48 53 56], ... 
	'String', 'NLOS', ... 
	'TooltipString', '');
  LOS_label = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [220 103 72 16], ... 
	'String', 'Line of Sight', ... 
	'TooltipString', '');
  Distance__Slider_2_BD = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 100, ... 
	'Min', 10, ... 
	'Position', [125 27 263 22], ... 
	'TooltipString', '', ... 
	'Value', 10);
  Distance_label = uicontrol( ...
	'parent',BuildingsPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 28 114 19], ... 
	'String', 'Distance = 10m', ... 
	'TooltipString', '');
  SetData = uipanel( ...
	'parent',FIRST_GUI, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [5 7 508 434], ... 
	'title', '2. Set Transmitter-Medium-Receiver Data', ... 
	'TitlePosition', 'lefttop');
  TransmitterPanel = uipanel( ...
	'parent',SetData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 210 490 201], ... 
	'title', 'Transmitter', ... 
	'TitlePosition', 'lefttop');
  Power = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 143 160 20], ... 
	'String', 'Power = 1.0 W', ... 
	'TooltipString', '');
  Frequency = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 90 158 19], ... 
	'String', 'Frequency = 400.0 MHz', ... 
	'TooltipString', '');
  Transmitter_Antenna_Type = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 31 159 18], ... 
	'String', 'Antenna Type:   ', ... 
	'TooltipString', '');
  Power_Slider = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 100, ... 
	'Min', 1, ... 
	'Position', [175 144 232 22], ... 
	'TooltipString', '', ... 
	'Value', 1);
  Power_Units = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [418 141 64 25], ... 
	'String', 'W|dbW|mW|dbmW', ... 
	'TooltipString', '');
  Frequency_Slider = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 5000, ... 
	'Min', 400, ... 
	'Position', [172 89 235 22], ... 
	'TooltipString', '', ... 
	'Value', 400);
  Frequency_Units = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [417 86 65 25], ... 
	'String', 'MHz', ... 
	'TooltipString', '');
  Antenna_Types = uicontrol( ...
	'parent',TransmitterPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [170 26 239 25], ... 
	'String', '0.25 Wavelength Dipole|0.5 Wavelength Dipole|1.5 Wavelength Dipole|Hertzian Dipole|Large Loop|Short Dipole|Small Loop|Wavelength Dipole', ... 
	'TooltipString', '');
  MediumPanel = uipanel( ...
	'parent',SetData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [11 114 490 83], ... 
	'title', 'Medium', ... 
	'TitlePosition', 'lefttop');
  PropagationModel = uicontrol( ...
	'parent',MediumPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 33 112 16], ... 
	'String', 'Propagation Model:', ... 
	'TooltipString', '');
  PropagationModelChooser = uicontrol( ...
	'parent',MediumPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [135 28 233 25], ... 
	'String', 'Free Space|Okumura-Hata Local Area|Okumura-Hata Suburban Area|Okumura-Hata Urban Area|Plane Earth', ... 
	'TooltipString', '');
  Medium_Edit = uicontrol( ...
	'parent',MediumPanel, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [380 26 57 26], ... 
	'String', 'Edit', ... 
	'TooltipString', '');
  ReceiverPanel = uipanel( ...
	'parent',SetData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 15 491 81], ... 
	'title', 'Receiver', ... 
	'TitlePosition', 'lefttop');
  Speed = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 42 115 16], ... 
	'String', 'Speed = 1.0 Km/h', ... 
	'TooltipString', '');
  Speed_Slider = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 200, ... 
	'Min', 1, ... 
	'Position', [127 39 232 22], ... 
	'TooltipString', '', ... 
	'Value', 1);
  Speed_Units = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [370 36 72 25], ... 
	'String', 'Km/h|m/s', ... 
	'TooltipString', '');
  Receiver_Antenna_Type = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 10 108 16], ... 
	'String', 'Antenna Type: ', ... 
	'TooltipString', '');
  Receiver_Antenna_Type_Chooser = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [125 6 236 25], ... 
	'String', '0.25 Wavelength Dipole|0.5 Wavelength Dipole|1.5 Wavelength Dipole|Hertzian Dipole|Large Loop|Short Dipole|Small Loop|Wavelength Dipole', ... 
	'TooltipString', '');
  Receiver_Edit = uicontrol( ...
	'parent',ReceiverPanel, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [372 7 69 24], ... 
	'String', 'Edit', ... 
	'TooltipString', '', ...
  'callback', '');
  SetChanneData = uipanel( ...
	'parent',FIRST_GUI, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [529 280 618 603], ... 
	'title', '3. Set Channel Data', ... 
	'TitlePosition', 'lefttop');
  fadingPanel = uipanel( ...
	'parent',SetChanneData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 456 599 127], ... 
	'title', 'Fading', ... 
	'TitlePosition', 'lefttop');
  LOSRiceFactor = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 81 186 16], ... 
	'String', 'LOS Rice factor = 1', ... 
	'TooltipString', '');
  LOS_Rice_Slider = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 50, ... 
	'Min', 1, ... 
	'Position', [200 80 324 22], ... 
	'TooltipString', '', ... 
	'Value', 1);
  LOS_View = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [530 80 64 22], ... 
	'String', 'View', ... 
	'TooltipString', '', ...
  'callback', '');
  SecondaryPaths = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 45 187 20], ... 
	'String', 'Secondary paths = 1', ... 
	'TooltipString', '');
  RMS = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 9 189 23], ... 
	'String', 'RMS Delay Eniviroment', ... 
	'TooltipString', '');
  Secondary_Paths_Slider = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 20, ... 
	'Min', 1, ... 
	'Position', [200 45 324 22], ... 
	'TooltipString', '', ... 
	'Value', 1);
  RMS_Views = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [530 7 65 60], ... 
	'String', 'View', ... 
	'TooltipString', '', ...
  'callback', '');
  RMS_Delay_Chooser = uicontrol( ...
	'parent',fadingPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [200 7 325 26], ... 
	'String', 'Indoor Cells|Urban Macrocell|Suburban Macrocell|Open Area|Hilly Area Macrocell|Mobile Satellite', ... 
	'TooltipString', '');
  WhiteNoisePanel = uipanel( ...
	'parent',SetChanneData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 402 600 51], ... 
	'title', 'White Noise', ... 
	'TitlePosition', 'lefttop');
  Eb_No_Slider = uicontrol( ...
	'parent',WhiteNoisePanel, ... 
	'Style','slider', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Max', 30, ... 
	'Min', -30, ... 
	'Position', [130 9 395 22], ... 
	'TooltipString', '', ... 
	'Value', -30);
  Eb_No = uicontrol( ...
	'parent',WhiteNoisePanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [5 11 119 16], ... 
	'String', 'Eb/No = -30db', ... 
	'TooltipString', '');
  White_Noise_View = uicontrol( ...
	'parent',WhiteNoisePanel, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [531 7 64 24], ... 
	'String', 'View', ... 
	'TooltipString', '', ...
  'callback', '');
  EncodingOverviewPanel = uipanel( ...
	'parent',SetChanneData, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [11 10 599 383], ... 
	'title', 'Encoding and OverView', ... 
	'TitlePosition', 'lefttop');
  MOD = uicontrol( ...
	'parent',EncodingOverviewPanel, ... 
	'Style','text', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'HorizontalAlignment', 'left', ... 
	'Position', [190 12 34 16], ... 
	'String', 'MOD:', ... 
	'TooltipString', '');
  MOD_Chooser= uicontrol( ...
	'parent',EncodingOverviewPanel, ... 
	'Style','popupmenu', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [240 8 166 25], ... 
	'String', 'PSK-2|PSK-16|PSK-64|OQPSK-4|DPSK-2|DPSK-16|DPSK-64|PAM-2|PAM-16|PAM-64|QAM-16|QAM-64', ... 
	'TooltipString', '');
  Image_3 = axes( ...
	'Units', 'pixels', ... 
	'parent',EncodingOverviewPanel, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'Position', [10 46 565 317]);
  Simulation = uipanel( ...
	'parent',FIRST_GUI, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [526 11 622 258], ... 
	'title', '4. Simulation', ... 
	'TitlePosition', 'lefttop');
  MeasurmentsPanel = uipanel( ...
	'parent',Simulation, ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'BorderWidth', 1, ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [15 60 570 163], ... 
	'title', 'Measurements', ... 
	'TitlePosition', 'lefttop');
  PathLoss = uicontrol( ...
	'parent',MeasurmentsPanel, ... 
	'Style','checkbox', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 98 389 20], ... 
	'String', 'Path Loss, Shadowing and Antenna gain variation - car position', ... 
	'TooltipString', '', ... 
	'Min', 0, 'Max', 1, 'Value', 1);
  Recv = uicontrol( ...
	'parent',MeasurmentsPanel, ... 
	'Style','checkbox', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [10 48 97 20], ... 
	'String', 'Recv. Field(t)', ... 
	'TooltipString', '', ... 
	'Min', 0, 'Max', 1, 'Value', 1);
  DelayProfile = uicontrol( ...
	'parent',MeasurmentsPanel, ... 
	'Style','checkbox', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [190 48 97 20], ... 
	'String', 'Delay Profile', ... 
	'TooltipString', '', ... 
	'Min', 0, 'Max', 1, 'Value', 1);
  RealTimeChAn = uicontrol( ...
	'parent',MeasurmentsPanel, ... 
	'Style','checkbox', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [365 48 181 20], ... 
	'String', 'Real-Time channel analysis', ... 
	'TooltipString', '', ... 
	'Min', 0, 'Max', 1, 'Value', 0);
  SimStart = uicontrol( ...
	'parent',Simulation, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [65 24 90 24], ... 
	'String', 'Start', ... 
	'TooltipString', '');
  PauseSim = uicontrol( ...
	'parent',Simulation, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [245 23 90 25], ... 
	'String', 'Pause', ... 
	'TooltipString', '');
  StopSim = uicontrol( ...
	'parent',Simulation, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [440 22 90 26], ... 
	'String', 'Stop', ... 
	'TooltipString', '');
  Transmiter_Edit = uicontrol( ...
	'parent',FIRST_GUI, ... 
	'Style','pushbutton', ... 
	'Units', 'pixels', ... 
	'BackgroundColor', [0.941 0.941 0.941], ... 
	'FontAngle', 'normal', ... 
	'FontName', 'Arial', ... 
	'FontSize', 10, 'FontUnits', 'points', ... 
	'FontWeight', 'normal', ... 
	'ForegroundColor', [0.000 0.000 0.000], ... 
	'Position', [433 243 66 25], ... 
	'String', 'Edit', ... 
	'TooltipString', '');

  FIRST_GUI = struct( ...
      'figure', FIRST_GUI, ...
      'ThreeDViewer', ThreeDViewer, ...
      'Demo', Demo, ...
      'About', About, ...
      'SetGeometryData', SetGeometryData, ...
      'AntennaPanel', AntennaPanel, ...
      'Height_Slider', Height_Slider, ...
      'Height', Height, ...
      'Elevation_Slider', Elevation_Slider, ...
      'Azimuth_Slider', Azimuth_Slider, ...
      'Horizon_Slider', Horizon_Slider, ...
      'Distance_Slider', Distance_Slider, ...
      'Azimuth', Azimuth, ...
      'Horizon', Horizon, ...
      'Elevation', Elevation, ...
      'Distance', Distance, ...
      'BuildingsPanel', BuildingsPanel, ...
      'LOS_Slider', LOS_Slider, ...
      'LOS', LOS, ...
      'NLOS', NLOS, ...
      'LOS_label', LOS_label, ...
      'Distance__Slider_2_BD', Distance__Slider_2_BD, ...
      'Distance_label', Distance_label, ...
      'SetData', SetData, ...
      'TransmitterPanel', TransmitterPanel, ...
      'Power', Power, ...
      'Frequency', Frequency, ...
      'Transmitter_Antenna_Type', Transmitter_Antenna_Type, ...
      'Power_Slider', Power_Slider, ...
      'Power_Units', Power_Units, ...
      'Frequency_Slider', Frequency_Slider, ...
      'Frequency_Units', Frequency_Units, ...
      'Antenna_Types', Antenna_Types, ...
      'MediumPanel', MediumPanel, ...
      'PropagationModel', PropagationModel, ...
      'PropagationModelChooser', PropagationModelChooser, ...
      'Medium_Edit', Medium_Edit, ...
      'ReceiverPanel', ReceiverPanel, ...
      'Speed', Speed, ...
      'Speed_Slider', Speed_Slider, ...
      'Speed_Units', Speed_Units, ...
      'Receiver_Antenna_Type', Receiver_Antenna_Type, ...
      'Receiver_Antenna_Type_Chooser', Receiver_Antenna_Type_Chooser, ...
      'Receiver_Edit', Receiver_Edit, ...
      'SetChanneData', SetChanneData, ...
      'fadingPanel', fadingPanel, ...
      'LOSRiceFactor', LOSRiceFactor, ...
      'LOS_Rice_Slider', LOS_Rice_Slider, ...
      'LOS_View', LOS_View, ...
      'SecondaryPaths', SecondaryPaths, ...
      'RMS', RMS, ...
      'Secondary_Paths_Slider', Secondary_Paths_Slider, ...
      'RMS_Views', RMS_Views, ...
      'RMS_Delay_Chooser', RMS_Delay_Chooser, ...
      'WhiteNoisePanel', WhiteNoisePanel, ...
      'Eb_No_Slider', Eb_No_Slider, ...
      'Eb_No', Eb_No, ...
      'White_Noise_View', White_Noise_View, ...
      'EncodingOverviewPanel', EncodingOverviewPanel, ...
      'MOD', MOD, ...
      'Image_3', Image_3, ...
      'Simulation', Simulation, ...
      'MeasurmentsPanel', MeasurmentsPanel, ...
      'PathLoss', PathLoss, ...
      'Recv', Recv, ...
      'DelayProfile', DelayProfile, ...
      'RealTimeChAn', RealTimeChAn, ...
      'SimStart', SimStart, ...
      'PauseSim', PauseSim, ...
      'StopSim', StopSim, ...
      'Transmiter_Edit', Transmiter_Edit);


set (About, 'callback', {@About_doIt, FIRST_GUI});
set (Height_Slider, 'callback', {@Height_Slider_doIt, FIRST_GUI});
set (Elevation_Slider, 'callback', {@Elevation_Slider_doIt, FIRST_GUI});
set (Azimuth_Slider, 'callback', {@Azimuth_Slider_doIt, FIRST_GUI});
set (Horizon_Slider, 'callback', {@Horizon_Slider_doIt, FIRST_GUI});
set (Distance_Slider, 'callback', {@Distance_Slider_doIt, FIRST_GUI});
set (LOS_Slider, 'callback', {@LOS_Slider_doIt, FIRST_GUI});
set (Distance__Slider_2_BD, 'callback', {@Distance__Slider_2_BD_doIt, FIRST_GUI});
set (Power_Slider, 'callback', {@Power_Slider_doIt, FIRST_GUI});
set (Power_Units, 'callback', {@Power_Units_doIt, FIRST_GUI});
set (Frequency_Slider, 'callback', {@Frequency_Slider_doIt, FIRST_GUI});
set (Frequency_Units, 'callback', {@Frequency_Units_doIt, FIRST_GUI});
set (Antenna_Types, 'callback', {@Antenna_Types_doIt, FIRST_GUI});
set (PropagationModelChooser, 'callback', {@PropagationModelChooser_doIt, FIRST_GUI});
set (Medium_Edit, 'callback', {@Medium_Edit_doIt, FIRST_GUI});
set (Speed_Units, 'callback', {@Speed_Units_doIt, FIRST_GUI});
set (Speed_Slider, 'callback', {@Speed_Slider_doIt, FIRST_GUI});
set (Receiver_Antenna_Type_Chooser, 'callback', {@Receiver_Antenna_Type_Chooser_doIt, FIRST_GUI});
set (Receiver_Edit, 'callback', {@Receiver_Edit_doIt, FIRST_GUI});
set (LOS_Rice_Slider, 'callback', {@LOS_Rice_Slider_doIt, FIRST_GUI});
set (LOS_View, 'callback', {@LOS_View_doIt, FIRST_GUI});
set (Secondary_Paths_Slider, 'callback', {@Secondary_Paths_Slider_doIt, FIRST_GUI});
set (RMS_Views, 'callback', {@RMS_Views_doIt, FIRST_GUI});
set (RMS_Delay_Chooser, 'callback', {@RMS_Delay_Chooser_doIt, FIRST_GUI});
set (Eb_No_Slider, 'callback', {@Eb_No_Slider_doIt, FIRST_GUI});
set (White_Noise_View, 'callback', {@White_Noise_View_doIt, FIRST_GUI});
set (PathLoss, 'callback', {@PathLoss_doIt, FIRST_GUI});
set (Recv, 'callback', {@Recv_doIt, FIRST_GUI});
set (SimStart, 'callback', {@SimStart_doIt, FIRST_GUI});
set (PauseSim, 'callback', {@PauseSim_doIt, FIRST_GUI});
set (StopSim, 'callback', {@StopSim_doIt, FIRST_GUI});
  set (Transmiter_Edit, 'callback', {@Transmiter_Edit_doIt, FIRST_GUI});
  dlg = struct(FIRST_GUI);

%
% The source code writed here will be executed when
% windows load. Work like 'onLoad' event of other languages.
%
  speed=0;
  frequency=0;
  set(FIRST_GUI.figure, 'visible', 'on', 'resize', 'on');
  I=imread("blocks.png");
  ret = FIRST_GUI;
  axes(ret.Image_3);
  imshow(I);

end

